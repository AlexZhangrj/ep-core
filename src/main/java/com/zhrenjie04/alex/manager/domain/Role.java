package com.zhrenjie04.alex.manager.domain;

import java.util.LinkedList;
import java.util.List;

import com.zhrenjie04.alex.core.AbstractGenericEntity;

/**
 * Model class of t_role.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
public class Role extends AbstractGenericEntity {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** role_id. */
	private String roleId;

	/** role_name. */
	private String roleName;

	/** role_code. */
	private String roleCode;

	/** is_locked. */
	private Boolean isLocked;

	/** parent_id. */
	private String parentId;

	/** id_path. */
	private String idPath;
	
	/** group_id. */
	private String groupId;
	
	private List<Role> children=new LinkedList<Role>();
	
	public String getRoleId() {
		return roleId;
	}

	public void setRoleId(String roleId) {
		this.roleId = roleId;
	}

	public String getRoleName() {
		return roleName;
	}

	public void setRoleName(String roleName) {
		this.roleName = roleName;
	}

	public String getRoleCode() {
		return roleCode;
	}

	public void setRoleCode(String roleCode) {
		this.roleCode = roleCode;
	}

	public Boolean getIsLocked() {
		return isLocked;
	}

	public void setIsLocked(Boolean isLocked) {
		this.isLocked = isLocked;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((roleId == null) ? 0 : roleId.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		Role other = (Role) obj;
		if (roleId == null) {
			if (other.roleId != null) {
				return false;
			}
		} else if (!roleId.equals(other.roleId)) {
			return false;
		}
		return true;
	}

	@Override
	public String getPK() {
		return roleId;
	}

	@Override
	public void setPK(String id) {
		this.roleId=id;
	}

	public List<Role> getChildren() {
		return children;
	}

	public void setChildren(List<Role> children) {
		this.children = children;
	}

	public String getParentId() {
		return parentId;
	}

	public void setParentId(String parentId) {
		this.parentId = parentId;
	}

	public String getIdPath() {
		return idPath;
	}

	public void setIdPath(String idPath) {
		this.idPath = idPath;
	}

	public String getGroupId() {
		return groupId;
	}

	public void setGroupId(String groupId) {
		this.groupId = groupId;
	}

}
